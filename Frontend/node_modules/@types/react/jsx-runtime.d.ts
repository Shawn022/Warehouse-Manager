import * as React from "react";

// Re-export React namespace so other type files can reference it via this module.
export { React };

export namespace JSX {
    type ElementType = React.ElementType;
    interface Element extends React.JSX.Element {}
    interface ElementClass extends React.JSX.ElementClass {}
    interface ElementAttributesProperty extends React.JSX.ElementAttributesProperty {}
    interface ElementChildrenAttribute extends React.JSX.ElementChildrenAttribute {}
    type LibraryManagedAttributes<C, P> = React.JSX.LibraryManagedAttributes<C, P>;
    interface IntrinsicAttributes extends React.JSX.IntrinsicAttributes {}
    interface IntrinsicClassAttributes<T> extends React.JSX.IntrinsicClassAttributes<T> {}
    interface IntrinsicElements extends React.JSX.IntrinsicElements {}
}

/**
 * JSX runtime helpers (minimal declarations). Transpilers call these; you normally
 * don't call them directly from user code.
 */
export function jsx(type: React.ElementType, props: any, key?: React.Key): React.ReactElement;
export function jsxs(type: React.ElementType, props: any, key?: React.Key): React.ReactElement;
export function jsxDEV(type: React.ElementType, props: any, key?: React.Key, isStaticChildren?: boolean): React.ReactElement;
